-----------------------------------   HTML FILE ---------------------------------------
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Inventory Management System</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Inventory Management System</h1>
        
        <div class="form-container">
            <h2>Add or Update Item</h2>
            <form id="inventoryForm">
                <input type="hidden" id="itemId" />
                <label for="itemName">Item Name:</label>
                <input type="text" id="itemName" required />
                
                <label for="quantity">Quantity:</label>
                <input type="number" id="quantity" min="1" required />
                
                <label for="price">Price (in ₹):</label>
                <input type="number" id="price" min="0.01" step="0.01" required />
                
                <label for="category">Category:</label>
                <input type="text" id="category" required />
                
                <button type="submit">Add/Update Item</button>
            </form>
        </div>
        
        <div class="search-container">
            <input type="text" id="searchBar" placeholder="Search by name or category..." />
            <button id="sortAsc">Sort by Price Ascending</button>
            <button id="sortDesc">Sort by Price Descending</button>
        </div>
        
        <div class="inventory-list">
            <h2>Inventory</h2>
            <ul id="inventoryList"></ul>
        </div>
        
        <div class="total-value">
            <h2>Total Inventory Value: ₹<span id="totalValue">0.00</span></h2>
        </div>
    </div>
    
    <script src="script.js"></script>
</body>
</html>
_------------------------------------------------------------------------------------------------------------------------------
---------------------------------------------css file(style.css)----------------------------------------------------------------
body {
    font-family: Arial, sans-serif;
    background-color: #f4f4f4;
    margin: 0;
    padding: 0;
}

.container {
    width: 80%;
    margin: auto;
    padding: 20px;
    background: #fff;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

h1, h2 {
    color: #333;
}

.form-container, .search-container, .inventory-list, .total-value {
    margin-bottom: 20px;
}

input[type="text"], input[type="number"] {
    display: block;
    width: calc(100% - 22px);
    padding: 10px;
    margin-bottom: 10px;
}

button {
    padding: 10px 15px;
    background-color: #007bff;
    color: #fff;
    border: none;
    cursor: pointer;
}

button:hover {
    background-color: #0056b3;
}

ul {
    list-style: none;
    padding: 0;
}

li {
    padding: 10px;
    border-bottom: 1px solid #ddd;
}

.search-container input {
    width: calc(100% - 122px);
    display: inline-block;
}

.search-container button {
    width: 60px;
    display: inline-block;
    margin-left: 10px;
}
----------------------------------------------------------------------------------------------------------------
------------------------------------js(script.js)--------------------------------------------------------------------
document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('inventoryForm');
    const itemIdInput = document.getElementById('itemId');
    const itemNameInput = document.getElementById('itemName');
    const quantityInput = document.getElementById('quantity');
    const priceInput = document.getElementById('price');
    const categoryInput = document.getElementById('category');
    const inventoryList = document.getElementById('inventoryList');
    const totalValueSpan = document.getElementById('totalValue');
    const searchBar = document.getElementById('searchBar');
    const sortAscButton = document.getElementById('sortAsc');
    const sortDescButton = document.getElementById('sortDesc');

    let inventory = [];

    form.addEventListener('submit', (e) => {
        e.preventDefault();

        const item = {
            id: itemIdInput.value || Date.now().toString(),
            name: itemNameInput.value,
            quantity: parseInt(quantityInput.value),
            price: parseFloat(priceInput.value),
            category: categoryInput.value
        };

        if (itemIdInput.value) {
            // Update existing item
            const index = inventory.findIndex(i => i.id === itemIdInput.value);
            if (index !== -1) {
                inventory[index] = item;
            }
        } else {
            // Add new item
            inventory.push(item);
        }

        resetForm();
        renderInventory();
    });

    function resetForm() {
        itemIdInput.value = '';
        itemNameInput.value = '';
        quantityInput.value = '';
        priceInput.value = '';
        categoryInput.value = '';
    }

    function renderInventory(filteredItems = inventory) {
        inventoryList.innerHTML = '';
        let totalValue = 0;

        filteredItems.forEach(item => {
            const li = document.createElement('li');
            li.innerHTML = `
                <strong>${item.name}</strong> - Quantity: ${item.quantity}, Price: ₹${item.price.toFixed(2)}, Category: ${item.category}
                <button onclick="editItem('${item.id}')">Edit</button>
                <button onclick="deleteItem('${item.id}')">Delete</button>
            `;
            inventoryList.appendChild(li);
            totalValue += item.quantity * item.price;
        });

        totalValueSpan.textContent = totalValue.toFixed(2);
    }

    window.editItem = (id) => {
        const item = inventory.find(i => i.id === id);
        if (item) {
            itemIdInput.value = item.id;
            itemNameInput.value = item.name;
            quantityInput.value = item.quantity;
            priceInput.value = item.price;
            categoryInput.value = item.category;
        }
    };

    window.deleteItem = (id) => {
        inventory = inventory.filter(i => i.id !== id);
        renderInventory();
    };

    searchBar.addEventListener('input', () => {
        const searchValue = searchBar.value.toLowerCase();
        const filteredItems = inventory.filter(item =>
            item.name.toLowerCase().includes(searchValue) ||
            item.category.toLowerCase().includes(searchValue)
        );
        renderInventory(filteredItems);
    });

    sortAscButton.addEventListener('click', () => {
        const sortedItems = [...inventory].sort((a, b) => a.price - b.price);
        renderInventory(sortedItems);
    });

    sortDescButton.addEventListener('click', () => {
        const sortedItems = [...inventory].sort((a, b) => b.price - a.price);
        renderInventory(sortedItems);
    });

    renderInventory(); // Initial render
});
------------------------------------------------------------------------------------------------------------------
-------------------------------------------backend(server.js)--------------------------------------------------------
const express = require('express');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

let inventory = [];

app.use(bodyParser.json());
app.use(express.static('public')); // Serve static files from 'public'

app.get('/api/inventory', (req, res) => {
    res.json(inventory);
});

app.post('/api/inventory', (req, res) => {
    const item = req.body;
    if (item.id) {
        // Update item
        const index = inventory.findIndex(i => i.id === item.id);
        if (index !== -1) {
            inventory[index] = item;
        }
    } else {
        // Add new item
        item.id = Date.now().toString();
        inventory.push(item);
    }
    res.json(inventory);
});

app.delete('/api/inventory/:id', (req, res) => {
    inventory = inventory.filter(i => i.id !== req.params.id);
    res.json(inventory);
});

app.listen(port, () => {
    console.log(`Server is running at http://localhost:${port}`);
});
----------------------------------------------------------------------------------------------------------------------
